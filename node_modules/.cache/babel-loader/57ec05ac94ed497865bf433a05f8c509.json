{"remainingRequest":"/Users/ash/country-vue/node_modules/babel-loader/lib/index.js!/Users/ash/country-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ash/country-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ash/country-vue/src/views/Countries.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ash/country-vue/src/views/Countries.vue","mtime":1627597514072},{"path":"/Users/ash/country-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ash/country-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ash/country-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ash/country-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvYXNoL2NvdW50cnktdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvYXNoL2NvdW50cnktdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBDb3VudHJ5RGV0YWlscyBmcm9tICcuLi9jb21wb25lbnRzL0NvdW50cnlEZXRhaWxzLnZ1ZSc7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWxsQ291bnRyaWVzOiBudWxsLAogICAgICBjb3VudHJpZXM6IG51bGwKICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBDb3VudHJ5RGV0YWlsczogQ291bnRyeURldGFpbHMKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb3VudHJpZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCJodHRwczovL3Jlc3Rjb3VudHJpZXMuZXUvcmVzdC92Mi9hbGwiKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuY291bnRyaWVzID0gcmVzcG9uc2VbImRhdGEiXTsKICAgICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgICByZXR1cm4gd2luZG93LmFsZXJ0KCJjb3VudHJ5IGRhdGEgZmV0Y2g6ICIgKyBlcnJvcik7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgY291bnRyaWVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzLmFsbENvdW50cmllcyA9IGNvdW50cmllcy5tYXAoZnVuY3Rpb24gKHgpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiB4Lm5hbWUsCiAgICAgICAgICAgICAgICAgICAgcmVnaW9uOiB4LnJlZ2lvbiwKICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZXM6IHgubGFuZ3VhZ2VzLAogICAgICAgICAgICAgICAgICAgIGNhcGl0YWw6IHguY2FwaXRhbCwKICAgICAgICAgICAgICAgICAgICBmbGFnOiB4LmZsYWcKICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgX3RoaXMuY291bnRyaWVzID0gX3RvQ29uc3VtYWJsZUFycmF5KF90aGlzLmFsbENvdW50cmllcyk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBjbGVhclNlYXJjaDogZnVuY3Rpb24gY2xlYXJTZWFyY2goKSB7CiAgICAgIHRoaXMuY291bnRyaWVzID0gX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuYWxsQ291bnRyaWVzKTsKICAgIH0sCiAgICBoYW5kbGVTZWFyY2g6IGZ1bmN0aW9uIGhhbmRsZVNlYXJjaCh2YWx1ZSkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuY291bnRyaWVzID0gW107CiAgICAgIHRoaXMuYWxsQ291bnRyaWVzLmZvckVhY2goZnVuY3Rpb24gKGNvdW50cnkpIHsKICAgICAgICBpZiAoY291bnRyeS5uYW1lLnRvTG93ZXJDYXNlKCkuaW5kZXhPZih2YWx1ZS50b0xvd2VyQ2FzZSgpKSAhPT0gLTEpIF90aGlzMi5jb3VudHJpZXMucHVzaChjb3VudHJ5KTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5pbml0KCk7CiAgfQp9Ow=="},{"version":3,"sources":["Countries.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,OAAA,cAAA,MAAA,kCAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,IADA;AAEA,MAAA,SAAA,EAAA;AAFA,KAAA;AAIA,GANA;AAOA,EAAA,UAAA,EAAA;AACA,IAAA,cAAA,EAAA;AADA,GAPA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CACA,GADA,CACA,sCADA,EAEA,IAFA,CAEA,UAAA,QAAA;AAAA,yBAAA,KAAA,CAAA,SAAA,GAAA,QAAA,CAAA,MAAA,CAAA;AAAA,iBAFA,EAGA,KAHA,CAGA,UAAA,KAAA;AAAA,yBAAA,MAAA,CAAA,KAAA,CAAA,yBAAA,KAAA,CAAA;AAAA,iBAHA,CADA;;AAAA;AACA,gBAAA,SADA;AAKA,gBAAA,KAAA,CAAA,YAAA,GAAA,SAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AAAA,yBAAA;AAAA,oBAAA,IAAA,EAAA,CAAA,CAAA,IAAA;AAAA,oBAAA,MAAA,EAAA,CAAA,CAAA,MAAA;AAAA,oBAAA,SAAA,EAAA,CAAA,CAAA,SAAA;AAAA,oBAAA,OAAA,EAAA,CAAA,CAAA,OAAA;AAAA,oBAAA,IAAA,EAAA,CAAA,CAAA;AAAA,mBAAA;AAAA,iBAAA,CAAA;AACA,gBAAA,KAAA,CAAA,SAAA,sBAAA,KAAA,CAAA,YAAA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,KARA;AAUA,IAAA,WAVA,yBAUA;AACA,WAAA,SAAA,sBAAA,KAAA,YAAA;AACA,KAZA;AAeA,IAAA,YAfA,wBAeA,KAfA,EAeA;AAAA;;AACA,WAAA,SAAA,GAAA,EAAA;AACA,WAAA,YAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,YAAA,OAAA,CAAA,IAAA,CAAA,WAAA,GAAA,OAAA,CAAA,KAAA,CAAA,WAAA,EAAA,MAAA,CAAA,CAAA,EACA,MAAA,CAAA,SAAA,CAAA,IAAA,CAAA,OAAA;AACA,OAHA;AAKA;AAtBA,GAVA;AAkCA,EAAA,OAlCA,qBAkCA;AACA,SAAA,IAAA;AACA;AApCA,CAAA","sourcesContent":["<template>\n<div>\n    <AutoComplete\n      placeholder=\"search countries\"\n      @on-search=\"handleSearch\"\n      style=\"width:200px\"\n      icon=\"ios-search\"\n      @on-clear=\"clearSearch\"\n      clearable\n    >\n    </AutoComplete> <br> <br>\n\n    <Row type=\"flex\" >\n      <country-details\n        v-for=\"(country,index) in countries\"\n        :country=\"country\"\n        :key=\"index\"\n      ></country-details>\n    </Row>\n</div>\n\n</template>\n\n<script>\nimport CountryDetails from '../components/CountryDetails.vue'\nimport axios from 'axios'\nexport default {\n  data() {\n    return {\n      allCountries: null,\n      countries: null,\n    };\n  },\n  components: {\n    CountryDetails,\n  },\n  methods:{\n    async init(){\n      var countries = await axios\n        .get(\"https://restcountries.eu/rest/v2/all\")\n        .then((response) => (this.countries = response[\"data\"]))\n        .catch((error) => window.alert(\"country data fetch: \" + error));\n      this.allCountries = countries.map(x => {return {name : x.name, region: x.region, languages: x.languages, capital: x.capital, flag: x.flag }});\n      this.countries = [...this.allCountries]\n    },\n    \n    clearSearch(){\n      this.countries = [...this.allCountries]\n    },\n\n    \n    handleSearch(value){\n        this.countries = []\n        this.allCountries.forEach(country => {\n           if(country.name.toLowerCase().indexOf(value.toLowerCase()) !== -1)\n            this.countries.push(country)\n        });\n\n    }\n  },\n  created() {\n    this.init()\n  }\n}\n\n</script>"],"sourceRoot":"src/views"}]}