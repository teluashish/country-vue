{"remainingRequest":"/Users/ash/country-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ash/country-vue/src/components/Countries.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ash/country-vue/src/components/Countries.vue","mtime":1627595722732},{"path":"/Users/ash/country-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ash/country-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ash/country-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ash/country-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDb3VudHJ5RGV0YWlscyBmcm9tICcuL0NvdW50cnlEZXRhaWxzLnZ1ZScKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFsbENvdW50cmllczogbnVsbCwKICAgICAgY291bnRyaWVzOiBudWxsLAogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIENvdW50cnlEZXRhaWxzLAogIH0sCiAgbWV0aG9kczp7CiAgICBhc3luYyBpbml0KCl7CiAgICAgIHZhciBjb3VudHJpZXMgPSBhd2FpdCBheGlvcwogICAgICAgIC5nZXQoImh0dHBzOi8vcmVzdGNvdW50cmllcy5ldS9yZXN0L3YyL2FsbCIpCiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiAodGhpcy5jb3VudHJpZXMgPSByZXNwb25zZVsiZGF0YSJdKSkKICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB3aW5kb3cuYWxlcnQoImNvdW50cnkgZGF0YSBmZXRjaDogIiArIGVycm9yKSk7CiAgICAgIHRoaXMuYWxsQ291bnRyaWVzID0gY291bnRyaWVzLm1hcCh4ID0+IHtyZXR1cm4ge25hbWUgOiB4Lm5hbWUsIHJlZ2lvbjogeC5yZWdpb24sIGxhbmd1YWdlczogeC5sYW5ndWFnZXMsIGNhcGl0YWw6IHguY2FwaXRhbCwgZmxhZzogeC5mbGFnIH19KTsKICAgICAgdGhpcy5jb3VudHJpZXMgPSBbLi4udGhpcy5hbGxDb3VudHJpZXNdCiAgICB9LAogICAgCgogICAgCiAgICBoYW5kbGVTZWFyY2godmFsdWUpewogICAgICAgIHRoaXMuY291bnRyaWVzID0gW10KICAgICAgICB0aGlzLmFsbENvdW50cmllcy5mb3JFYWNoKGNvdW50cnkgPT4gewogICAgICAgICAgIGlmKGNvdW50cnkubmFtZS50b0xvd2VyQ2FzZSgpLmluZGV4T2YodmFsdWUudG9Mb3dlckNhc2UoKSkgIT09IC0xKQogICAgICAgICAgICB0aGlzLmNvdW50cmllcy5wdXNoKGNvdW50cnkpCiAgICAgICAgfSk7CgogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuaW5pdCgpCiAgfQp9Cgo="},{"version":3,"sources":["Countries.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Countries.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n    <AutoComplete\n      placeholder=\"search countries\"\n      @on-search=\"handleSearch\"\n      size=\"large\"\n    >\n    </AutoComplete> <br>\n\n    <Row :gutter=\"11\" :type=\"'flex'\" >\n      <country-details\n        v-for=\"(country,index) in countries\"\n        :country=\"country\"\n        :key=\"index\"\n      ></country-details>\n    </Row>\n</div>\n\n</template>\n\n<script>\nimport CountryDetails from './CountryDetails.vue'\nimport axios from 'axios'\nexport default {\n  data() {\n    return {\n      allCountries: null,\n      countries: null,\n    };\n  },\n  components: {\n    CountryDetails,\n  },\n  methods:{\n    async init(){\n      var countries = await axios\n        .get(\"https://restcountries.eu/rest/v2/all\")\n        .then((response) => (this.countries = response[\"data\"]))\n        .catch((error) => window.alert(\"country data fetch: \" + error));\n      this.allCountries = countries.map(x => {return {name : x.name, region: x.region, languages: x.languages, capital: x.capital, flag: x.flag }});\n      this.countries = [...this.allCountries]\n    },\n    \n\n    \n    handleSearch(value){\n        this.countries = []\n        this.allCountries.forEach(country => {\n           if(country.name.toLowerCase().indexOf(value.toLowerCase()) !== -1)\n            this.countries.push(country)\n        });\n\n    }\n  },\n  created() {\n    this.init()\n  }\n}\n\n</script>"]}]}